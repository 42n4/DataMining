---
title: "Homework 3"
author: "Neven Piƒçuljan"
date: "October 22, 2015"
output: html_document
---
# The Homework

Download the dataset `adult` (find more about this dataset here: http://archive.ics.uci.edu/ml/machine-learning-databases/adult/). 

Train a k-nn for different k and Random Forest for different `m` and compare these results with the use of ROC curves and AUC values. 

```{r, eval=FALSE}
data = read.table("http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data",
        sep=",",header=F,col.names=c("age", "type_employer", "fnlwgt", "education", 
                "education_num","marital", "occupation", "relationship", "race","sex",
                "capital_gain", "capital_loss", "hr_per_week","country", "income"),
        fill=FALSE,strip.white=T)
head(data,3)

```

#Solution

```{r, eval=FALSE}
library(randomForest)
library(caret)

data$income <- factor(data$income)

# Random Forest with m = 3
ffit <- randomForest(income ~ age+type_employer+capital_gain+capital_loss,   data=data, importance = TRUE, mtry=3)
prob <- predict(ffit, type="prob")[,2]

# k-nn with k = 10
ffit2 <- knn3(income ~ age+type_employer+capital_gain+capital_loss, data=data, k=10)
prob2 <- predict(ffit2, newdata = data, type="prob")[,2]

# ROC for Random Forest with m = 3 (red) and k-nn with k = 10 (blue) 
fit.pred = prediction(prob, data$income)
fit.perf = performance(fit.pred,"tpr","fpr")
plot(fit.perf, col="red3")
fit.pred2 = prediction(prob2, data$income)
fit.perf2 = performance(fit.pred2,"tpr","fpr")
plot(fit.perf2, col="blue3", add=TRUE)
abline(a=0,b=1)

# AUC for Random Forest with m = 3
fit.pred = prediction(prob, data$income)
fit.perf = performance(fit.pred,"auc")
fit.perf@y.values[[1]]

# AUC for k-nn with k = 10
fit.pred = prediction(prob2, data$income)
fit.perf = performance(fit.pred,"auc")
fit.perf@y.values[[1]]


# Random Forest with m = 2
ffit <- randomForest(income ~ age+type_employer+capital_gain+capital_loss,   data=data, importance = TRUE, mtry=2)
prob <- predict(ffit, type="prob")[,2]

# k-nn with k = 20
ffit2 <- knn3(income ~ age+type_employer+capital_gain+capital_loss, data=data, k=20)
prob2 <- predict(ffit2, newdata = data, type="prob")[,2]

# ROC for Random Forest with m = 2 (red) and k-nn with k = 20 (blue) 
fit.pred = prediction(prob, data$income)
fit.perf = performance(fit.pred,"tpr","fpr")
plot(fit.perf, col="red3")
fit.pred2 = prediction(prob2, data$income)
fit.perf2 = performance(fit.pred2,"tpr","fpr")
plot(fit.perf2, col="blue3", add=TRUE)
abline(a=0,b=1)

# AUC for Random Forest with m = 2
fit.pred = prediction(prob, data$income)
fit.perf = performance(fit.pred,"auc")
fit.perf@y.values[[1]]

# AUC for k-nn with k = 20
fit.pred = prediction(prob2, data$income)
fit.perf = performance(fit.pred,"auc")
fit.perf@y.values[[1]]

# Random Forest with m = 1
ffit <- randomForest(income ~ age+type_employer+capital_gain+capital_loss,   data=data, importance = TRUE, mtry=1)
prob <- predict(ffit, type="prob")[,2]

# k-nn with k = 30
ffit2 <- knn3(income ~ age+type_employer+capital_gain+capital_loss, data=data, k=30)
prob2 <- predict(ffit2, newdata = data, type="prob")[,2]

# ROC for Random Forest with m = 1 (red) and k-nn with k = 30 (blue) 
fit.pred = prediction(prob, data$income)
fit.perf = performance(fit.pred,"tpr","fpr")
plot(fit.perf, col="red3")
fit.pred2 = prediction(prob2, data$income)
fit.perf2 = performance(fit.pred2,"tpr","fpr")
plot(fit.perf2, col="blue3", add=TRUE)
abline(a=0,b=1)

# AUC for Random Forest with m = 1
fit.pred = prediction(prob, data$income)
fit.perf = performance(fit.pred,"auc")
fit.perf@y.values[[1]]

# AUC for k-nn with k = 30
fit.pred = prediction(prob2, data$income)
fit.perf = performance(fit.pred,"auc")
fit.perf@y.values[[1]]
```
